{"version":3,"sources":["redux/tickers/tickers-actions.js","utils/socket.js","Components/Header/Header.jsx","Components/Container/Container.jsx","redux/tickers/tickers-selectors.js","utils/ticker-name.js","Components/Table/TabelComponent.jsx","App.js","redux/tickers/tickers-operations.js","redux/tickers/tickers-reducers.js","redux/store.js","index.js","Components/Table/TableComponent.module.css"],"names":["socketInitRequest","createAction","socketInitSuccess","socketInitError","socket","io","Header","className","Container","children","getTickkers","state","tickers","getFullNameTicker","ticker","TableComponent","value","useSelector","styles","table","exchange","time","map","item","color","Number","change_percent","green","red","price","change","last_trade_time","yield","App","dispatch","useDispatch","useEffect","emit","on","data","Error","itemsTickers","createReducer","_","payload","error","isConnected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sNAEMA,EAAoBC,YAAa,6BACjCC,EAAoBD,YAAa,6BACjCE,EAAkBF,YAAa,2B,QCFtBG,E,MADAC,GAAG,yB,OCEHC,EAHA,WACb,OAAO,wBAAQC,UAAU,YCGZC,EAJG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKF,UAAU,YAAf,SAA4BE,KCD/BC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SCuBpBC,EAvBW,SAAAC,GACxB,OAAQA,GACN,IAAK,OACH,MAAO,QAET,IAAK,QACH,MAAO,WAET,IAAK,OACH,MAAO,YAET,IAAK,OACH,MAAO,SAET,IAAK,KACH,MAAO,WAET,IAAK,OACH,MAAO,QACT,QACE,MAAO,Y,gBCuBEC,EAtCQ,WACrB,IAAMC,EAAQC,YAAYP,GAC1B,OACE,wBAAOH,UAAWW,IAAOC,MAAzB,UACE,gCACE,+BACE,sCACA,wCACA,oBAAIZ,UAAWW,IAAOE,SAAtB,sBACA,uCACA,wCACA,yCACA,oBAAIb,UAAWW,IAAOG,KAAtB,6BACA,4CAGJ,gCACGL,EAAMM,KAAI,SAAAC,GACT,IAAMC,EACJC,OAAOF,EAAKG,gBAAkB,EAAIR,IAAOS,MAAQT,IAAOU,IAC1D,OACE,+BACE,6BAAKf,EAAkBU,EAAKT,UAC5B,6BAAKS,EAAKT,SACV,oBAAIP,UAAWW,IAAOE,SAAtB,SAAiCG,EAAKH,WACtC,6BAAKG,EAAKM,QACV,6BAAKN,EAAKO,SACV,oBAAIvB,UAAWiB,EAAf,SAAuBD,EAAKG,iBAC5B,oBAAInB,UAAWW,IAAOG,KAAtB,SAA6BE,EAAKQ,kBAClC,6BAAKR,EAAKS,UARHT,EAAKT,iBCDXmB,I,EAAAA,EAhBf,WACE,IAAMC,EAAWC,cAKjB,OAJAC,qBAAU,WACRF,GCLuB,SAAAA,GACzBA,EAASlC,KACTI,EAAOiC,KAAK,SACZjC,EAAOkC,GAAG,UAAU,SAAAC,GAAI,OAElBL,EADJK,EACarC,EAAkBqC,GAClBpC,EAAgB,IAAIqC,MAAM,kBDAtC,CAACN,IAGF,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,U,uBETFO,EAAeC,YAFG,GAEU,eAC/BxC,GAAoB,SAACyC,EAAD,YAAMC,YAGvBC,EAAQH,YAAc,KAAD,eACxBvC,GAAkB,SAACwC,EAAD,YAAMC,YAErBE,EAAcJ,aAAc,GAAD,mBAC9B1C,GAAoB,kBAAM,KADI,cAG9BG,GAAkB,kBAAM,KAHM,IAMlB4C,cAAgB,CAC7BnC,QAAS6B,EACTK,cACAD,UCtBIG,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,MAIjBC,EAAQC,YAAe,CAC3BC,UACAC,UAAUC,EACVP,eCNFQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,U,kBCZ1BC,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,MAAQ,8BAA8B,IAAM,4BAA4B,SAAW,iCAAiC,KAAO,gC","file":"static/js/main.17af6882.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst socketInitRequest = createAction('tickers/socketInitRequest');\r\nconst socketInitSuccess = createAction('tickers/socketInitSuccess');\r\nconst socketInitError = createAction('tickers/socketInitError');\r\n\r\nexport { socketInitRequest, socketInitSuccess, socketInitError };\r\n","import io from 'socket.io-client';\r\nconst socket = io('http://localhost:4000');\r\nexport default socket;\r\n","const Header = () => {\r\n  return <header className=\"header\"></header>;\r\n};\r\nexport default Header;\r\n","const Container = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","const getTickkers = state => state.tickers;\r\n\r\nconst getIsConnected = state => state.isConnected;\r\n\r\nexport { getTickkers, getIsConnected };\r\n","const getFullNameTicker = ticker => {\r\n  switch (ticker) {\r\n    case 'AAPL':\r\n      return 'Apple';\r\n\r\n    case 'GOOGL':\r\n      return 'Alphabet';\r\n\r\n    case 'MSFT':\r\n      return 'Microsoft';\r\n\r\n    case 'AMZN':\r\n      return 'Amazon';\r\n\r\n    case 'FB':\r\n      return 'Facebook';\r\n\r\n    case 'TSLA':\r\n      return 'Tesla';\r\n    default:\r\n      return 'Unknown';\r\n  }\r\n};\r\nexport default getFullNameTicker;\r\n","import { useSelector } from 'react-redux';\r\nimport { getTickkers } from '../../redux/tickers/tickers-selectors';\r\nimport getFullNameTicker from '../../utils/ticker-name';\r\nimport styles from './TableComponent.module.css';\r\n\r\nconst TableComponent = () => {\r\n  const value = useSelector(getTickkers);\r\n  return (\r\n    <table className={styles.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Ticker</th>\r\n          <th className={styles.exchange}>Exchange</th>\r\n          <th>Price</th>\r\n          <th>Change</th>\r\n          <th>Change%</th>\r\n          <th className={styles.time}>Last trade time</th>\r\n          <th>Yield</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {value.map(item => {\r\n          const color =\r\n            Number(item.change_percent) > 0 ? styles.green : styles.red;\r\n          return (\r\n            <tr key={item.ticker}>\r\n              <td>{getFullNameTicker(item.ticker)}</td>\r\n              <td>{item.ticker}</td>\r\n              <td className={styles.exchange}>{item.exchange}</td>\r\n              <td>{item.price}</td>\r\n              <td>{item.change}</td>\r\n              <td className={color}>{item.change_percent}</td>\r\n              <td className={styles.time}>{item.last_trade_time}</td>\r\n              <td>{item.yield}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TableComponent;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport './App.css';\r\nimport { fetchTickers } from './redux/tickers/tickers-operations';\r\n\r\nimport Header from './Components/Header';\r\nimport Container from './Components/Container';\r\nimport Table from './Components/Table';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchTickers());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <Table />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  socketInitError,\r\n  socketInitSuccess,\r\n  socketInitRequest,\r\n} from './tickers-actions';\r\nimport socket from '../../utils/socket';\r\n\r\nconst fetchTickers = () => dispatch => {\r\n  dispatch(socketInitRequest());\r\n  socket.emit('start');\r\n  socket.on('ticker', data =>\r\n    data\r\n      ? dispatch(socketInitSuccess(data))\r\n      : dispatch(socketInitError(new Error('fail'))),\r\n  );\r\n};\r\n\r\nexport { fetchTickers };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  socketInitError,\r\n  socketInitRequest,\r\n  socketInitSuccess,\r\n} from './tickers-actions';\r\n\r\nconst INITIAL_TICKERS = [];\r\n\r\nconst itemsTickers = createReducer(INITIAL_TICKERS, {\r\n  [socketInitSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [socketInitError]: (_, { payload }) => payload,\r\n});\r\nconst isConnected = createReducer(false, {\r\n  [socketInitRequest]: () => true,\r\n\r\n  [socketInitError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  tickers: itemsTickers,\r\n  isConnected,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport reducer from './tickers/tickers-reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {},\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware,\r\n});\r\n\r\nexport { store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"TableComponent_table__3eK6h\",\"green\":\"TableComponent_green__2NRAz\",\"red\":\"TableComponent_red__1cOaA\",\"exchange\":\"TableComponent_exchange__ob6ZB\",\"time\":\"TableComponent_time__1DoHY\"};"],"sourceRoot":""}